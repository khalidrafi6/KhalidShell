<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Khalid&#39;s Shell</title>
    <link>http://localhost:1313/en/posts/</link>
    <description>Recent content in Posts on Khalid&#39;s Shell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 29 Mar 2025 15:17:22 +0600</lastBuildDate><atom:link href="http://localhost:1313/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Install Desktop Extensions in Firefox for Android</title>
      <link>http://localhost:1313/en/posts/desktop-extensions-firefox-android/</link>
      <pubDate>Sat, 29 Mar 2025 15:17:22 +0600</pubDate>
      
      <guid>http://localhost:1313/en/posts/desktop-extensions-firefox-android/</guid>
      <description>&lt;p&gt;Firefox offers a wide range of extensions that enhance browsing on desktop, but many of these are not officially available on Android. Fortunately, there&amp;rsquo;s a workaround to install desktop extensions on Firefox for Android. Here&amp;rsquo;s a step-by-step guide:&lt;/p&gt;
&lt;h3 id=&#34;steps-to-install-desktop-extensions&#34;&gt;Steps to Install Desktop Extensions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Enable the Debug Menu&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open Firefox on your Android device.&lt;/li&gt;
&lt;li&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;About Firefox&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Tap the Firefox logo &lt;strong&gt;7 times&lt;/strong&gt; to enable the &lt;strong&gt;Debug Menu&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download the Extension&lt;/strong&gt;&lt;/p&gt;</description>
      <content>&lt;p&gt;Firefox offers a wide range of extensions that enhance browsing on desktop, but many of these are not officially available on Android. Fortunately, there&amp;rsquo;s a workaround to install desktop extensions on Firefox for Android. Here&amp;rsquo;s a step-by-step guide:&lt;/p&gt;
&lt;h3 id=&#34;steps-to-install-desktop-extensions&#34;&gt;Steps to Install Desktop Extensions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Enable the Debug Menu&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open Firefox on your Android device.&lt;/li&gt;
&lt;li&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;About Firefox&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Tap the Firefox logo &lt;strong&gt;7 times&lt;/strong&gt; to enable the &lt;strong&gt;Debug Menu&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download the Extension&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visit &lt;a href=&#34;https://addons.mozilla.org&#34;&gt;addons.mozilla.org&lt;/a&gt; in Firefox and find the desktop extension you want.&lt;/li&gt;
&lt;li&gt;Under the install button, you&amp;rsquo;ll now see a &lt;strong&gt;Download file&lt;/strong&gt; option. Tap it to download the &lt;code&gt;.xpi&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install the Extension&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go back to &lt;strong&gt;Settings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You&amp;rsquo;ll find a new option: &lt;strong&gt;Install extensions from file&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Select the downloaded &lt;code&gt;.xpi&lt;/code&gt; file to install the extension.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify Installation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After installation, check the extensions menu to ensure the extension is active.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;important-notes&#34;&gt;Important Notes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Compatibility Issues&lt;/strong&gt;: Some desktop extensions may not work properly on Android, as they aren&amp;rsquo;t optimized for mobile.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance Impact&lt;/strong&gt;: Extensions designed for desktop might slow down your browser or drain battery life.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Request Official Support&lt;/strong&gt;: If an extension doesn&amp;rsquo;t work, consider contacting the developer to request an Android-compatible version.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If the Debug Menu doesn&amp;rsquo;t appear, restart Firefox and try again.&lt;/li&gt;
&lt;li&gt;Ensure you&amp;rsquo;re using the latest version of Firefox for Android.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following these steps, you can enjoy your favorite desktop extensions on Firefox for Android. Happy browsing!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to Code Without a Computer</title>
      <link>http://localhost:1313/en/posts/coding-without-computer/</link>
      <pubDate>Sat, 01 Mar 2025 00:05:03 +0600</pubDate>
      
      <guid>http://localhost:1313/en/posts/coding-without-computer/</guid>
      <description>&lt;p&gt;Many people want to learn programming but can&amp;rsquo;t because they don&amp;rsquo;t have a computer. Good news for them: you can learn programming using just your mobile phone. Let’s see how:&lt;/p&gt;
&lt;h2 id=&#34;1-online-code-editors-and-compilers&#34;&gt;1. Online Code Editors and Compilers:&lt;/h2&gt;
&lt;p&gt;The easiest way to code on a mobile device is by using online code editors and compilers. Search for terms like &lt;em&gt;online code editor&lt;/em&gt; or &lt;em&gt;online compiler&lt;/em&gt; in your search engine (or ask an AI chatbot), and you’ll find many options, such as &lt;a href=&#34;http://codepen.io/&#34;&gt;CodePen&lt;/a&gt;, which is a front-end web development environment. The advantage is that you can code directly from your browser without installing any additional apps. Even if your mobile device isn’t high-end, you can still manage. However, your phone must support internet browsing. If you struggle to find a code editor or compiler that supports your programming language, try searching with the specific programming language name.&lt;/p&gt;</description>
      <content>&lt;p&gt;Many people want to learn programming but can&amp;rsquo;t because they don&amp;rsquo;t have a computer. Good news for them: you can learn programming using just your mobile phone. Let’s see how:&lt;/p&gt;
&lt;h2 id=&#34;1-online-code-editors-and-compilers&#34;&gt;1. Online Code Editors and Compilers:&lt;/h2&gt;
&lt;p&gt;The easiest way to code on a mobile device is by using online code editors and compilers. Search for terms like &lt;em&gt;online code editor&lt;/em&gt; or &lt;em&gt;online compiler&lt;/em&gt; in your search engine (or ask an AI chatbot), and you’ll find many options, such as &lt;a href=&#34;http://codepen.io/&#34;&gt;CodePen&lt;/a&gt;, which is a front-end web development environment. The advantage is that you can code directly from your browser without installing any additional apps. Even if your mobile device isn’t high-end, you can still manage. However, your phone must support internet browsing. If you struggle to find a code editor or compiler that supports your programming language, try searching with the specific programming language name.&lt;/p&gt;
&lt;h2 id=&#34;2-code-editor-apps&#34;&gt;2. Code Editor Apps:&lt;/h2&gt;
&lt;p&gt;Apart from web-based options, there are many code editor apps available for Android. In my opinion, the best options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/org.gnu.emacs/&#34;&gt;Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/neovim/neovim/blob/master/INSTALL.md#android&#34;&gt;Neovim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both are cross-platform, so you can use the same editor everywhere. Emacs is relatively easier to use. Neovim has a learning curve but it a is very powerful editor if you can master it. To run Neovim, you’ll need &lt;a href=&#34;https://termux.com/&#34;&gt;Termux&lt;/a&gt;. For both editors, you can find detailed instructions on their respective websites. Feel free to ask me if you need help.&lt;/p&gt;
&lt;p&gt;For convenience, you can buy a separate keyboard and use it with your phone via USB OTG. A keyboard will make programming much easier. Alternatively, you can install one of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/juloo.keyboard2/&#34;&gt;Unexpected Keyboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/klausw/hackerskeyboard&#34;&gt;Hacker&amp;rsquo;s Keyboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These apps allow you to use a computer-like keyboard on your mobile device.&lt;/p&gt;
&lt;p&gt;There are many other code editor apps on the Play Store, but most are tagged &lt;em&gt;Contains ads&lt;/em&gt;, which I don’t prefer. However, I found one ad-free app called &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.alif.ide&#34;&gt;Code Studio&lt;/a&gt;. You can try it out.&lt;/p&gt;
&lt;p&gt;Additionally, there are apps for learning programming, such as &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.hyperskill.app.android&#34;&gt;Hyperskill&lt;/a&gt;. These apps offer programming courses designed to be engaging, helping you stay motivated. Features like scoring and notifications will keep you inspired to learn coding.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Linux Frozen? Recover and Troubleshoot System Issues with SysRq Commands</title>
      <link>http://localhost:1313/en/posts/sysrq-linux/</link>
      <pubDate>Sat, 01 Mar 2025 00:05:03 +0600</pubDate>
      
      <guid>http://localhost:1313/en/posts/sysrq-linux/</guid>
      <description>&lt;p&gt;Linux &lt;strong&gt;SysRq commands&lt;/strong&gt; are a lifesaver when your system freezes or becomes unresponsive. The kernel always responds to these commands, no matter what state the computer is in. However, if the kernel itself is completely locked up, that&amp;rsquo;s a different story. The &lt;strong&gt;SysRq&lt;/strong&gt; feature is extremely useful when system issues occur. For example, if your Linux is frozen and stops responding to any input, you can use &lt;strong&gt;SysRq&lt;/strong&gt; to shut down or reboot the computer.&lt;/p&gt;</description>
      <content>&lt;p&gt;Linux &lt;strong&gt;SysRq commands&lt;/strong&gt; are a lifesaver when your system freezes or becomes unresponsive. The kernel always responds to these commands, no matter what state the computer is in. However, if the kernel itself is completely locked up, that&amp;rsquo;s a different story. The &lt;strong&gt;SysRq&lt;/strong&gt; feature is extremely useful when system issues occur. For example, if your Linux is frozen and stops responding to any input, you can use &lt;strong&gt;SysRq&lt;/strong&gt; to shut down or reboot the computer.&lt;/p&gt;
&lt;p&gt;If your kernel was compiled with &lt;strong&gt;SysRq&lt;/strong&gt; support, you can enable/disable its functions via &lt;code&gt;/proc/sys/kernel/sysrq&lt;/code&gt;. The &lt;code&gt;/proc/sys/kernel/sysrq&lt;/code&gt; file may contain the following values:&lt;/p&gt;
&lt;p&gt;0 - Completely disables &lt;strong&gt;SysRq&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1 - Enables all &lt;strong&gt;SysRq&lt;/strong&gt; functions&lt;/p&gt;
&lt;p&gt;&amp;gt; 1 - &lt;strong&gt;bitmask&lt;/strong&gt; of allowed &lt;strong&gt;SysRq&lt;/strong&gt; functions&lt;/p&gt;
&lt;p&gt;You can set values in this file using the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo NUMBER &amp;gt; /proc/sys/kernel/sysrq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that this file only controls keyboard-initiated SysRq usage. You can use any command via &lt;code&gt;/proc/sysrq-trigger&lt;/code&gt;, even if it&amp;rsquo;s not enabled in the aforementioned file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To use SysRq:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;• On x86 systems:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ALT&lt;/code&gt; + &lt;code&gt;SysRq&lt;/code&gt; +&lt;code&gt;&amp;lt;command key&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Note:&lt;/strong&gt; Many keyboards don&amp;rsquo;t have a dedicated SysRq key. SysRq is often shared with the Print Screen key, typically labeled &amp;ldquo;Print Screen&amp;rdquo; on top and &amp;ldquo;SysRq&amp;rdquo; on the bottom.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;• On any system:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Write a &lt;code&gt;&amp;lt;command key&amp;gt;&lt;/code&gt; to the &lt;code&gt;/proc/sysrq-trigger&lt;/code&gt; file. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo b &amp;gt; /proc/sysrq-trigger
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to execute multiple commands, prefix them with _:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo _reisub &amp;gt; /proc/sysrq-trigger
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;List of &lt;code&gt;&amp;lt;command key&amp;gt;&lt;/code&gt; functions:&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;b---immediately-reboots-the-system-without-syncing-or-unmounting-disks&#34;&gt;&lt;code&gt;b&lt;/code&gt; - Immediately reboots the system without syncing or unmounting disks&lt;/h3&gt;
&lt;h3 id=&#34;c---crashes-the-system-to-collect-a-crash-dump-if-configured&#34;&gt;&lt;code&gt;c&lt;/code&gt; - Crashes the system to collect a crash dump (if configured)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;e&lt;/code&gt; - Sends &lt;code&gt;SIGTERM&lt;/code&gt; to all processes except &lt;code&gt;init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;f&lt;/code&gt; - Invokes the &lt;strong&gt;OOM killer&lt;/strong&gt; to kill memory-hogging processes&lt;/p&gt;
&lt;p&gt;&lt;code&gt;h&lt;/code&gt; - Shows help&lt;/p&gt;
&lt;p&gt;&lt;code&gt;i&lt;/code&gt; - Sends &lt;code&gt;SIGKILL&lt;/code&gt; to all processes except &lt;code&gt;init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;k&lt;/code&gt; - &lt;strong&gt;Secure Access Key (SAK)&lt;/strong&gt; kills all programs on current virtual console&lt;/p&gt;
&lt;p&gt;&lt;code&gt;o&lt;/code&gt; - Powers off the computer&lt;/p&gt;
&lt;p&gt;&lt;code&gt;r&lt;/code&gt; - Turns off keyboard raw mode and sets &lt;code&gt;XLATE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;s&lt;/code&gt; - Attempts to sync all mounted filesystems&lt;/p&gt;
&lt;p&gt;&lt;code&gt;t&lt;/code&gt; - Dumps a list of current tasks and their information to console&lt;/p&gt;
&lt;p&gt;&lt;code&gt;u&lt;/code&gt; - Attempts to remount all mounted filesystems as read-only&lt;/p&gt;
&lt;p&gt;&lt;code&gt;w&lt;/code&gt; - Dumps tasks that are in uninterruptible (blocked) state&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0-9&lt;/code&gt; - Sets console log level, controlling which kernel messages appear&lt;/p&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; - Replays kernel log messages to console&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Practical applications:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;r&lt;/code&gt; - Useful when &lt;strong&gt;X server&lt;/strong&gt; or any &lt;strong&gt;svgalib&lt;/strong&gt; program crashes&lt;/p&gt;
&lt;p&gt;&lt;code&gt;k&lt;/code&gt; - &lt;strong&gt;Secure Access Key (SAK)&lt;/strong&gt; is useful to ensure no &lt;strong&gt;Trojan&lt;/strong&gt; is running on the console, as it kills all programs on the current virtual console. This helps verify that the login prompt comes from genuine &lt;code&gt;init&lt;/code&gt; rather than a Trojan. Because, a Trojan can steal your password when logging in. It&amp;rsquo;s also used when a program (like &lt;strong&gt;X&lt;/strong&gt; or &lt;strong&gt;svgalib&lt;/strong&gt;) won&amp;rsquo;t release the console.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;b&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt; - Used when you can&amp;rsquo;t shut down the computer normally&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c&lt;/code&gt; - Crashes the system to collect crash dumps (if dump collection is configured)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;s&lt;/code&gt; - Ensures data is written to disk. Useful before removing media or after using a rescue shell (if it lacks shutdown functionality). Note that sync isn&amp;rsquo;t complete until you see &lt;strong&gt;&amp;ldquo;OK&amp;rdquo;&lt;/strong&gt; or &lt;strong&gt;&amp;ldquo;Done&amp;rdquo;&lt;/strong&gt; on screen.&lt;/p&gt;
&lt;p&gt;Log levels &lt;code&gt;0-9&lt;/code&gt; help when the console is flooded with non-critical kernel messages. Level 0 shows only the most critical messages (&lt;code&gt;PANIC&lt;/code&gt; and &lt;code&gt;OOPS&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;e&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt; - Useful when you can&amp;rsquo;t terminate a &lt;strong&gt;runaway&lt;/strong&gt; process by other means&lt;/p&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; - This helps view kernel log messages when the system hangs or when you can&amp;rsquo;t use &lt;strong&gt;dmesg&lt;/strong&gt; to read the &lt;strong&gt;printk&lt;/strong&gt; buffer.&lt;/p&gt;
&lt;p&gt;For more details about the &lt;strong&gt;SysRq Key&lt;/strong&gt;, visit &lt;a href=&#34;https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html&#34;&gt;this link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Source:&lt;/strong&gt; &lt;a href=&#34;https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html&#34;&gt;The Linux Kernel Documentation&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
