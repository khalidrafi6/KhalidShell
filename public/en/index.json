[{"content":"Firefox offers a wide range of extensions that enhance browsing on desktop, but many of these are not officially available on Android. Fortunately, there\u0026rsquo;s a workaround to install desktop extensions on Firefox for Android. Here\u0026rsquo;s a step-by-step guide:\nSteps to Install Desktop Extensions Enable the Debug Menu\nOpen Firefox on your Android device. Go to Settings \u0026gt; About Firefox. Tap the Firefox logo 7 times to enable the Debug Menu. Download the Extension\nVisit addons.mozilla.org in Firefox and find the desktop extension you want. Under the install button, you\u0026rsquo;ll now see a Download file option. Tap it to download the .xpi file. Install the Extension\nGo back to Settings. You\u0026rsquo;ll find a new option: Install extensions from file. Select the downloaded .xpi file to install the extension. Verify Installation\nAfter installation, check the extensions menu to ensure the extension is active. Important Notes Compatibility Issues: Some desktop extensions may not work properly on Android, as they aren\u0026rsquo;t optimized for mobile. Performance Impact: Extensions designed for desktop might slow down your browser or drain battery life. Request Official Support: If an extension doesn\u0026rsquo;t work, consider contacting the developer to request an Android-compatible version. Troubleshooting If the Debug Menu doesn\u0026rsquo;t appear, restart Firefox and try again. Ensure you\u0026rsquo;re using the latest version of Firefox for Android. By following these steps, you can enjoy your favorite desktop extensions on Firefox for Android. Happy browsing!\n","tags":["Tips \u0026 Tricks","Browsers"],"title":"How to Install Desktop Extensions in Firefox for Android","url":"http://localhost:1313/en/posts/firefox-android-desktop-extensions/"},{"content":"Linux has some special SysRq Key commands that can help manage system issues. The kernel always responds to these commands, no matter what state the computer is in - even if it\u0026rsquo;s completely frozen. However, if the kernel itself is completely locked up, that\u0026rsquo;s a different story. The SysRq feature is extremely useful when system issues occur. For example, if your computer freezes and stops responding to any input, you can use SysRq to shut down or reboot the computer.\nIf your kernel was compiled with SysRq support, you can enable/disable its functions via /proc/sys/kernel/sysrq. The /proc/sys/kernel/sysrq file may contain the following values:\n0 - Completely disables SysRq\n1 - Enables all SysRq functions\n1 - bitmask of allowed SysRq functions\nYou can set values in this file using the following command:\necho NUMBER \u0026gt; /proc/sys/kernel/sysrq Note that this file only controls keyboard-initiated SysRq usage. You can use any command via /proc/sysrq-trigger, even if it\u0026rsquo;s not enabled in the aforementioned file.\nTo use SysRq:\n• On x86 systems:\nALT + SysRq +\u0026lt;command key\u0026gt;\nNote: Many keyboards don\u0026rsquo;t have a dedicated SysRq key. SysRq is often shared with the Print Screen key, typically labeled \u0026ldquo;Print Screen\u0026rdquo; on top and \u0026ldquo;SysRq\u0026rdquo; on the bottom.\n• On any system:\nWrite a \u0026lt;command key\u0026gt; to the /proc/sysrq-trigger file. For example:\necho b \u0026gt; /proc/sysrq-trigger If you want to execute multiple commands, prefix them with _:\necho _reisub \u0026gt; /proc/sysrq-trigger List of \u0026lt;command key\u0026gt; functions:\nb - Immediately reboots the system without syncing or unmounting disks\nc - Crashes the system to collect a crash dump (if configured)\ne - Sends SIGTERM to all processes except init\nf - Invokes the OOM killer to kill memory-hogging processes\nh - Shows help\ni - Sends SIGKILL to all processes except init\nk - Secure Access Key (SAK) kills all programs on current virtual console\no - Powers off the computer\nr - Turns off keyboard raw mode and sets XLATE\ns - Attempts to sync all mounted filesystems\nt - Dumps a list of current tasks and their information to console\nu - Attempts to remount all mounted filesystems as read-only\nw - Dumps tasks that are in uninterruptible (blocked) state\n0-9 - Sets console log level, controlling which kernel messages appear\nR - Replays kernel log messages to console\nPractical applications:\nr - Useful when X server or any svgalib program crashes\nk - Secure Access Key (SAK) is useful to ensure no Trojan is running on the console, as it kills all programs on the current virtual console. This helps verify that the login prompt comes from genuine init rather than a Trojan. Because, a Trojan can steal your password when logging in. It\u0026rsquo;s also used when a program (like X or svgalib) won\u0026rsquo;t release the console.\nb, o - Used when you can\u0026rsquo;t shut down the computer normally\nc - Crashes the system to collect crash dumps (if dump collection is configured)\ns - Ensures data is written to disk. Useful before removing media or after using a rescue shell (if it lacks shutdown functionality). Note that sync isn\u0026rsquo;t complete until you see \u0026ldquo;OK\u0026rdquo; or \u0026ldquo;Done\u0026rdquo; on screen.\nLog levels 0-9 help when the console is flooded with non-critical kernel messages. Level 0 shows only the most critical messages (PANIC and OOPS).\ne, i - Useful when you can\u0026rsquo;t terminate a runaway process by other means\nR - This helps view kernel log messages when the system hangs or when you can\u0026rsquo;t use dmesg to read the printk buffer.\nFor more details about the SysRq Key, visit this link.\nSource: The Linux Kernel Documentation\n","tags":["Linux","Troubleshooting"],"title":"How to Use the SysRq Key to Troubleshoot Linux System Issues","url":"http://localhost:1313/en/posts/sysrq-linux/"},{"content":"Many people want to learn programming but can\u0026rsquo;t because they don\u0026rsquo;t have a computer. Good news for them: you can learn programming using just your mobile phone. Let’s see how:\n1. Online Code Editors and Compilers: The easiest way to code on a mobile device is by using online code editors and compilers. Search for terms like online code editor or online compiler in your search engine (or ask an AI chatbot), and you’ll find many options, such as CodePen, which is a front-end web development environment. The advantage is that you can code directly from your browser without installing any additional apps. Even if your mobile device isn’t high-end, you can still manage. However, your phone must support internet browsing. If you struggle to find a code editor or compiler that supports your programming language, try searching with the specific programming language name.\n2. Code Editor Apps: Apart from web-based options, there are many code editor apps available for Android. In my opinion, the best options are:\nEmacs Neovim Both are cross-platform, so you can use the same editor everywhere. Emacs is relatively easier to use. Neovim has a learning curve but it a is very powerful editor if you can master it. To run Neovim, you’ll need Termux. For both editors, you can find detailed instructions on their respective websites. Feel free to ask me if you need help.\nFor convenience, you can buy a separate keyboard and use it with your phone via USB OTG. A keyboard will make programming much easier. Alternatively, you can install one of the following:\nUnexpected Keyboard Hacker\u0026rsquo;s Keyboard These apps allow you to use a computer-like keyboard on your mobile device.\nThere are many other code editor apps on the Play Store, but most are tagged Contains ads, which I don’t prefer. However, I found one ad-free app called Code Studio. You can try it out.\nAdditionally, there are apps for learning programming, such as Hyperskill. These apps offer programming courses designed to be engaging, helping you stay motivated. Features like scoring and notifications will keep you inspired to learn coding.\n","tags":["Tips \u0026 Tricks","Programming"],"title":"How to Code Without a Computer","url":"http://localhost:1313/en/posts/coding-without-computer/"}]