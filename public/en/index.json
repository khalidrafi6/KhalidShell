[{"content":"Cloudflare Pages is a nice option for hosting a static site. They offer many features for site security, speed and optimization compared to Github Pages. They also seem very promising for privacy, though I\u0026rsquo;m unsure how genuine that is! Remember, they\u0026rsquo;re an American company. But, that\u0026rsquo;s out of the scope for this article. This guide focuses on the process of deploying a Hugo site to Cloudflare Pages - a platform we use ourselves for this very site! Though the Cloudflare Docs covers much of the process, it lacks some info for a Hugo site. So, I\u0026rsquo;ll share with you what I learnt from my own experience to save you some headache. Cloudflare offers three ways to deploy your static site to Pages. I\u0026rsquo;ll cover the Git Integration method to deploy your Hugo site to Cloudflare Pages. With this, you can simply push your commits to GitHub to trigger a deployment just like GitHub Pages. Alright, let\u0026rsquo;s begin!\nConnect Your GitHub Repo to Pages Log in to the Cloudflare dashboard. Create an account if you haven\u0026rsquo;t already. Select Workers \u0026amp; Pages under Compute (Workers) from the sidebar. Select Create. Then, under Pages, choose Get Started for the Import an existing Git repository option. Then choose Connect GitHub. It will redirect you to GitHub. Log into your GitHub account. GitHub will ask you where to install Cloudflare Workers and Pages. Choose your personal account. Then, authorize it to All repositories or Only select repositories according to your choice. Specify a repository if you chose the latter. You can choose from both public and private repo. Then select Install \u0026amp; Authorize. It will redirect you again to the Cloudflare dashboard. Then, select the GitHub repository for your Hugo site. Whenever you (git) push to this repo, Cloudflare will automatically deploy your site to Pages. Now, select Begin setup. You can then customize your deployment in the Set up builds and deployments screen. Set up builds and deployments Now, set your Project name. A subdomain will be created to the pages.dev domain by this name. Choose your Production branch. This branch will be used to deploy the production version of your site. This is usually main or master. Rest of the branches will be used for preview deployments. Under Build settings, choose Hugo as your Framework preset. Enter hugo in Build command field. Hugo publishes your site to public/. So, your Build output directory should be public. Cloudflare uses a very old version of Hugo as their default (v0.118.2). If you want to use a newer version, add an Environment Variable by the name HUGO_VERSION. Set the version number (e.g. 0.147.0) in the Value field. Now, select Save \u0026amp; Deploy. Cloudflare will start building your site and deploy it to Region: Earth Cloudflare\u0026rsquo;s global network. You\u0026rsquo;re done. If you want to use a custom domain, now select Add a custom domain and move to the next section. Otherwise, select Continue to project. You will be directed to a dashboard where you can see your project info, deployment status, production URL, current deployments etc. You can also configure other aspects of your site from here. Set up a custom domain Enter your domain name in the corresponding field. It will ask you to confirm new DNS records. Click Activate domain. You\u0026rsquo;ll see a message saying, \u0026ldquo; is being set up. It may take up to 48 hours for DNS records to update and for your site to become viewable by visitors.\u0026rdquo; Wait a bit and it should show active with green mark. Then, your custom domain will be live. Else, wait for 48 hours as said and keep checking. Troubleshooting URL issues: If your Pages site isn\u0026rsquo;t using the URL of your choice, ensure your baseURL is set correctly in your Hugo config. Incorrect config might cause your Pages site to redirect to Production URL (..pages.dev) or show other unexpected behaviors. Outdated Hugo: If your site isn\u0026rsquo;t looking as expected or some features aren\u0026rsquo;t working, please check if you\u0026rsquo;re using your desired Hugo version from Settings \u0026gt; Variables and Secrets. Build issues: Go to View details \u0026gt; Build Log from the Deployments section to troubleshoot build issues. Also, verify hugo command works locally. For further details, refer to Cloudflare Pages Docs.\nStill stuck? I provide IT support services and can help you with this from beginning to end! Feel free to contact me. Let me deal with this task for you!!\nThanks for reading. If you liked this tutorial, please share it and support me.\n","tags":["Cloudflare Pages","Hugo","Hosting and Deployment","Static Site","GitHub"],"title":"How to Deploy Your Hugo Site to Cloudflare Pages","url":"http://localhost:1313/en/posts/hugo-deploy-cloudflare-pages/"},{"content":"We often need to do PDF tasks like splitting pages, merging multiple PDFs, rearranging pages, etc. New Linux users might struggle with these. Let\u0026rsquo;s see how to do these common PDF tasks on Linux: 0. Before we start Required Packages PDF Arranger Poppler PDFtk GraphicsMagick Installation Debian: sudo apt install pdfarranger poppler-utils pdftk-java graphicsmagick Arch Linux: sudo pacman -S pdfarranger poppler pdftk graphicsmagick 1. How to split PDF pages in Linux You can split the pages of a PDF in two ways - vertically and horizontally. Both can be done in PDF Arranger.\nMethod:\nOpen file in PDF Arranger\nSelect pages to split (right-click for selection options)\nRight-click again and choose Split Pages\nYou\u0026rsquo;ll find two options here: Vertical Splits and Horizontal Splits. Enter how many vertical splits you want in Vertical Splits. For horizontal splits, specify the number in Horizontal Splits.\nIf you only want to split vertically, enter 1 in the Horizontal Splits field. If you only want to split horizontally, enter 1 in the Vertical Splits field. Save (CTRL + S) or use Save as (CTRL + Shift + S) for custom location/name\n2. How to merge multiple PDFs in Linux Often we need to combine multiple PDFs into a new one. You can easily do this using pdfunite from Poppler:\npdfunite first.pdf second.pdf third.pdf output.pdf 3. How to extract PDF pages in Linux If you need to extract one or more pages from a PDF:\nTo extract a range of pages into a single PDF pdftk infile.pdf cat first-last output outfile.pdf Here, replace first with the page number of the first page you want to extract from the main file. Similarly, replace last with the page number of the last page.\nTo create separate PDFs for each extracted page pdfseparate -f first -l last infile.pdf outfile-%d.pdf This command will create separate PDFs for each page from first to last. If you only want to extract one page, use that page\u0026rsquo;s number for both first and last. In this case, you can omit %d from the output filename.\n4. How to reorder PDF pages in Linux In PDF Arranger, you can easily rearrange PDF pages via drag-and-drop. Open the desired file, left-click and hold to drag pages to their new positions. Don\u0026rsquo;t forget to save when done.\n5. How to create PDF from images in Linux To combine multiple images into a PDF, use this command:\ngm convert 1.jpg 2.jpg 3.jpg out.pdf 6. How to convert a PDF to images in Linux To convert each page to an image pdftoppm -jpeg input.pdf output To convert a specific page to an image pdftoppm -jpeg -f page -singlefile input.pdf output This tutorial covered common PDF operations on Linux. Notice how command-line tools are often simpler and more powerful than GUI alternatives. Therefore, my advice to new users is to get comfortable using the terminal. Thanks for reading! Some information was collected from ArchWiki. Learn more at this link.\n","tags":["Linux","PDF"],"title":"How to Do Common PDF Tasks in Linux","url":"http://localhost:1313/en/posts/common-pdf-tasks-linux/"},{"content":"Firefox offers a wide range of extensions that enhance browsing on desktop, but many of these are not officially available on Android. Fortunately, there\u0026rsquo;s a workaround to install desktop extensions on Firefox for Android. Here\u0026rsquo;s a step-by-step guide:\nSteps to Install Desktop Extensions Enable the Debug Menu\nOpen Firefox on your Android device. Go to Settings \u0026gt; About Firefox. Tap the Firefox logo 7 times to enable the Debug Menu. Download the Extension\nVisit addons.mozilla.org in Firefox and find the desktop extension you want. Under the install button, you\u0026rsquo;ll now see a Download file option. Tap it to download the .xpi file. Install the Extension\nGo back to Settings. You\u0026rsquo;ll find a new option: Install extensions from file. Select the downloaded .xpi file to install the extension. Verify Installation\nAfter installation, check the extensions menu to ensure the extension is active. Important Notes Compatibility Issues: Some desktop extensions may not work properly on Android, as they aren\u0026rsquo;t optimized for mobile. Performance Impact: Extensions designed for desktop might slow down your browser or drain battery life. Request Official Support: If an extension doesn\u0026rsquo;t work, consider contacting the developer to request an Android-compatible version. By following these steps, you can enjoy your favorite desktop extensions on Firefox for Android. Happy browsing!\n","tags":["Tips and Tricks","Browsers","Firefox","Android"],"title":"How to Install Desktop Extensions in Firefox for Android","url":"http://localhost:1313/en/posts/firefox-android-desktop-extensions/"},{"content":"Linux SysRq commands are a lifesaver when your system freezes or becomes unresponsive. The kernel always responds to these commands, no matter what state the computer is in. However, if the kernel itself is completely locked up, that\u0026rsquo;s a different story. The SysRq feature is extremely useful when system issues occur. For example, if your Linux is frozen and stops responding to any input, you can use SysRq command to shut down or reboot the computer.\nHow to Enable SysRq If your kernel was compiled with SysRq support, you can enable/disable its functions via /proc/sys/kernel/sysrq. The /proc/sys/kernel/sysrq file may contain the following values:\n0 - Completely disables SysRq\n1 - Enables all SysRq functions\n\u0026gt; 1 - bitmask of allowed SysRq functions\nYou can set values in this file using the following command:\necho NUMBER \u0026gt; /proc/sys/kernel/sysrq Note that this file only controls keyboard-initiated SysRq usage. You can use any command via /proc/sysrq-trigger, even if it\u0026rsquo;s not enabled in the aforementioned file.\nHow to Use SysRq On x86 systems ALT + SysRq +\u0026lt;command key\u0026gt;\nNote: Many keyboards don\u0026rsquo;t have a dedicated SysRq key. SysRq is often shared with the Print Screen key, typically labeled \u0026ldquo;Print Screen\u0026rdquo; on top and \u0026ldquo;SysRq\u0026rdquo; on the bottom.\nOn any system Write a \u0026lt;command key\u0026gt; to the /proc/sysrq-trigger file. For example:\necho b \u0026gt; /proc/sysrq-trigger If you want to execute multiple commands, prefix them with _:\necho _reisub \u0026gt; /proc/sysrq-trigger List of SysRq \u0026lt;command key\u0026gt; functions b - Immediately reboots the system without syncing or unmounting disks\nc - Crashes the system to collect a crash dump (if configured)\ne - Sends SIGTERM to all processes except init\nf - Invokes the OOM killer to kill memory-hogging processes\nh - Shows help\ni - Sends SIGKILL to all processes except init\nk - Secure Access Key (SAK) kills all programs on current virtual console\no - Powers off the computer\nr - Turns off keyboard raw mode and sets XLATE\ns - Attempts to sync all mounted filesystems\nt - Dumps a list of current tasks and their information to console\nu - Attempts to remount all mounted filesystems as read-only\nw - Dumps tasks that are in uninterruptible (blocked) state\n0-9 - Sets console log level, controlling which kernel messages appear\nR - Replays kernel log messages to console\nPractical applications r - Useful when X server or any svgalib program crashes.\nk - Secure Access Key (SAK) is useful to ensure no Trojan is running on the console, as it kills all programs on the current virtual console. This helps verify that the login prompt comes from genuine init rather than a Trojan. Because a Trojan can steal your password when logging in. It\u0026rsquo;s also used when a program (like X or svgalib) won\u0026rsquo;t release the console.\nb, o - Used when you can\u0026rsquo;t shut down the computer normally.\nc - Crashes the system to collect crash dumps (if dump collection is configured).\ns - Ensures data is written to disk. Useful before removing media or after using a rescue shell (if it lacks shutdown functionality). Note that sync isn\u0026rsquo;t complete until you see \u0026ldquo;OK\u0026rdquo; or \u0026ldquo;Done\u0026rdquo; on screen.\nLog levels 0-9 help when the console is flooded with non-critical kernel messages. Level 0 shows only the most critical messages (PANIC and OOPS).\ne, i - Useful when you can\u0026rsquo;t terminate a runaway process by other means.\nR - This helps view kernel log messages when the system hangs or when you can\u0026rsquo;t use dmesg to read the printk buffer.\nFor more details about the SysRq Key, visit this link.\nSource: The Linux Kernel Documentation\n","tags":["Linux","Troubleshooting"],"title":"Linux Frozen? Recover and Troubleshoot System Issues with SysRq Commands","url":"http://localhost:1313/en/posts/sysrq-linux/"},{"content":"Many people want to learn programming but can\u0026rsquo;t because they don\u0026rsquo;t have a computer. Good news for them: you can learn programming using just your mobile phone. Let’s see how:\n1. Online Code Editors and Compilers: The easiest way to code on a mobile device is by using online code editors and compilers. Search for terms like online code editor or online compiler in your search engine (or ask an AI chatbot), and you’ll find many options, such as CodePen, which is a front-end web development environment. The advantage is that you can code directly from your browser without installing any additional apps. Even if your mobile device isn’t high-end, you can still manage. However, your phone must support internet browsing. If you struggle to find a code editor or compiler that supports your programming language, try searching with the specific programming language name.\n2. Code Editor Apps: Apart from web-based options, there are many code editor apps available for Android. In my opinion, the best options are:\nEmacs Neovim Both are cross-platform, so you can use the same editor everywhere. Emacs is relatively easier to use. Neovim has a learning curve but it a is very powerful editor if you can master it. To run Neovim, you’ll need Termux. For both editors, you can find detailed instructions on their respective websites. Feel free to ask me if you need help.\nFor convenience, you can buy a separate keyboard and use it with your phone via USB OTG. A keyboard will make programming much easier. Alternatively, you can install one of the following:\nUnexpected Keyboard Hacker\u0026rsquo;s Keyboard These apps allow you to use a computer-like keyboard on your mobile device.\nThere are many other code editor apps on the Play Store, but most are tagged Contains ads, which I don’t prefer. However, I found one ad-free app called Code Studio. You can try it out.\nAdditionally, there are apps for learning programming, such as Hyperskill. These apps offer programming courses designed to be engaging, helping you stay motivated. Features like scoring and notifications will keep you inspired to learn coding.\n","tags":["Tips and Tricks","Programming"],"title":"How to Code Without a Computer","url":"http://localhost:1313/en/posts/coding-without-computer/"}]