+++
title = "লিনাক্স ফ্রোজেন? SysRq কমান্ড দিয়ে সিস্টেম রিকভার ও ট্রাবলশুটিং"
date = "2025-03-01T00:05:03+06:00"
author = ""
authorTwitter = ""
cover = ""
tags = ["লিনাক্স", "ট্রাবলশুটিং"]
keywords = ["লিনাক্স", "SysRq", "কম্পিউটার"]
description = "লিনাক্স সিস্টেম ফ্রোজেন বা হ্যাং হলে SysRq কমান্ড ব্যবহার করে কিভাবে রিকভার করবেন, ক্র্যাশ সমাধান করবেন এবং নিরাপদে রিবুট করবেন - ধাপে ধাপে গাইড।"
showFullContent = false
readingTime = false
hideComments = false
+++


লিনাক্স **SysRq কমান্ড** সিস্টেম ফ্রোজ বা রেস্পন্স না দিলে জীবনরক্ষাকারী হিসেবে কাজ করে। কম্পিউটার যে অবস্থাতেই থাকুক না কেন কার্নেল সবসময় এই কমান্ডগুলোতে সাড়া দেয়। তবে কার্নেল নিজেই সম্পূর্ণ লক হয়ে গেলে ভিন্ন কথা। সিস্টেমে সমস্যা দেখা দিলে **SysRq** ফিচার অত্যন্ত উপকারী। উদাহরণস্বরূপ, আপনার লিনাক্স ফ্রোজ হয়ে গেলে এবং কোন ইনপুটেই সাড়া না দিলে, **SysRq** ব্যবহার করে কম্পিউটার বন্ধ বা রিবুট করতে পারবেন।

## SysRq কিভাবে চালু করবেন

আপনার কার্নেল **SysRq** সাপোর্ট নিয়ে কম্পাইল করা থাকলে, `/proc/sys/kernel/sysrq` এর মাধ্যমে এটির ফাংশনগুলো চালু/বন্ধ করতে পারবেন। `/proc/sys/kernel/sysrq` ফাইলে নিচের মানগুলো থাকতে পারে:

0 - **SysRq** সম্পূর্ণরূপে বন্ধ করে দেয়

1 - **SysRq** এর সকল ফাংশন চালু করে

\> 1 - অনুমোদিত **SysRq** ফাংশনগুলোর __bitmask__

আপনি নিচের কমান্ড দিয়ে ফাইলটিতে মান সেট করতে পারেন:
```shell
echo NUMBER > /proc/sys/kernel/sysrq
```

এই ফাইল শুধুমাত্র কীবোর্ড-ইনিশিয়েটেড SysRq ব্যবহার কন্ট্রোল করে। `/proc/sysrq-trigger` ব্যবহার করে আপনি যেকোন কমান্ড ব্যবহার করতে পারবেন, এমনকি যদি তা উক্ত ফাইলে এনাবল না থাকে।

## SysRq কিভাবে ব্যবহার করবেন

- **x86 সিস্টেমে**

`ALT` + `SysRq` +`<command key>`

__**নোট:** অনেক কীবোর্ডে আলাদা SysRq কী নেই। SysRq সাধারণত Print Screen কী-এর সাথে শেয়ার করা থাকে, যেখানে "Print Screen" উপরে এবং "SysRq" নিচে লেখা থাকে।__

- **যেকোন সিস্টেমে**

`/proc/sysrq-trigger` ফাইলে একটি `<command key>` লিখুন। উদাহরণ:
```shell
echo b > /proc/sysrq-trigger
```

আপনি যদি একাধিক কমান্ড এক্সিকিউট করতে চান, তাহলে আগে _ প্রিফিক্স করুন:
```shell
echo _reisub > /proc/sysrq-trigger
```

## SysRq `<command key>` ফাংশন তালিকা

- `b` - ডিস্ক সিঙ্ক বা আনমাউন্ট না করেই সিস্টেমকে তাত্ক্ষণিক রিবুট করে
- `c` - ক্র্যাশ ডাম্প কালেকশনের জন্য সিস্টেম ক্র্যাশ করে (যদি কনফিগার করা থাকে)
- `e` - `init` বাদে সব প্রসেসে `SIGTERM` পাঠায়
- `f` - __OOM killer__ ইনভোক করে মেমোরি হগিং প্রসেস কিল করে
- `h` - হেল্প দেখায়
- `i` - `init` বাদে সব প্রসেসে `SIGKILL` পাঠায়
- `k` - __Secure Access Key (SAK)__ বর্তমান ভার্চুয়াল কনসোলের সব প্রোগ্রাম কিল করে
- `o` - কম্পিউটার পাওয়ার অফ করে
- `r` - কীবোর্ড র মোড বন্ধ করে `XLATE` সেট করে
- `s` - সব মাউন্টেড ফাইলসিস্টেম সিঙ্ক করার চেষ্টা করে
- `t` - বর্তমান টাস্কের তালিকা ও তাদের তথ্য কনসোলে ডাম্প করে
- `u` - সব মাউন্টেড ফাইলসিস্টেম রিড-অনলি হিসেবে রিমাউন্ট করার চেষ্টা করে
- `w` - আনইন্টারাপ্টেবল (ব্লকড) স্টেটের টাস্ক ডাম্প করে
- `0-9` - কনসোল লগ লেভেল সেট করে, কার্নেল মেসেজ কনসোলে দেখানো কন্ট্রোল করে
- `R` - কার্নেল লগ মেসেজ কনসোলে রিপ্লে করে

## প্র্যাকটিক্যাল অ্যাপ্লিকেশন

- `r` - __X server__ বা __svgalib__ প্রোগ্রাম ক্র্যাশ করলে উপকারী
- `k` - __Secure Access Key (SAK)__ কনসোলে কোন __ট্রোজান__ চলছে কিনা তা নিশ্চিত করতে সাহায্য করে, কারন এটি বর্তমান ভার্চুয়াল কনসোলের সব প্রোগ্রাম কিল করে দেয়। এটি নিশ্চিত করে লগইন প্রম্পট আসল `init` থেকে আসছে, কোন ট্রোজান থেকে নয়। কারণ ট্রোজান লগইন করার সময় আপনার পাসওয়ার্ড চুরি করতে পারে। এটি তখনও ব্যবহার করা হয় যখন কোন প্রোগ্রাম (যেমন __X__ বা __svgalib__) কনসোল রিলিজ করে না।
- `b`, `o` - যখন আপনি নরমালি কম্পিউটার শাটডাউন করতে পারছেন না তখন ব্যবহার করা হয়
- `c` - ক্র্যাশ ডাম্প কালেকশনের জন্য সিস্টেম ক্র্যাশ করে (যদি ডাম্প কালেকশন কনফিগার করা থাকে)
- `s` - ডাটা ডিস্কে রাইট করা নিশ্চিত করে। মিডিয়া রিমুভ করার আগে বা রেস্কিউ শেল ব্যবহার করার পর উপকারী (যদি এতে শাটডাউন ফাংশনালিটি না থাকে)। মনে রাখবেন সিঙ্ক সম্পূর্ণ হয় না যতক্ষণ না স্ক্রিনে __"OK"__ বা __"Done"__ দেখায়।
- লগ লেভেল `0-9` তখন উপকারী যখন কনসোল নন-ক্রিটিক্যাল কার্নেল মেসেজে ভরে যায়। লেভেল 0 শুধুমাত্র সবচেয়ে ক্রিটিক্যাল মেসেজ (`PANIC` এবং `OOPS`) দেখায়।
- `e`, `i` - যখন আপনি অন্য কোন উপায়ে __runaway__ প্রসেস টার্মিনেট করতে পারছেন না তখন উপকারী
- `R` - সিস্টেম হ্যাং হলে বা যখন আপনি __printk__ বাফার পড়তে __dmesg__ ব্যবহার করতে পারছেন না তখন কার্নেল লগ মেসেজ দেখতে সাহায্য করে।

**SysRq Key** সম্পর্কে আরও বিস্তারিত জানতে [এই লিংক](https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html) ভিজিট করুন।

**সোর্স:** [The Linux Kernel Documentation](https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html)
```

### Key Matching Improvements:
1. **Structural Parity**: 
   - Same H2 sections (`##`) as English version
   - Identical command list formatting
2. **Terminology Consistency**:
   - Technical terms like "bitmask", "OOM killer", "SIGTERM" kept in English
   - "Secure Access Key (SAK)" preserved with Bengali explanation
3. **SEO Optimization**:
   - Added target keyword "লিনাক্স ফ্রোজেন" in title
   - Description includes "সিস্টেম ফ্রোজ বা হ্যাং"
4. **Practical Applications**:
   - Each use-case matched 1:1 with English examples
5. **Linking**:
   - Maintained same authoritative links to kernel docs

This version maintains complete technical accuracy while being fully localized for Bengali readers. The structure mirrors the English article exactly, making it ideal for a multilingual knowledge base.
